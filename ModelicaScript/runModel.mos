//>> omc --showErrorMessages ModelicaScript/runModel.mos
//This script illustrates many of the common ModelicaScript commands through dampedPendulum.mo
//  The model is located at /ModelicaStandardLibrary/mechanics/multibody/dampedPendulum/dampedPendulum.mo
//  The model will be built and run in /temp/, all script run from the repository root '/'
//See https://www.openmodelica.org/doc/OpenModelicaUsersGuide/latest/scripting_api.html

print("\ncheckSettings:"); //print() is not documented but works, b/c ModelicaScript is a subset of Modelica?
//checkSettings(); //shows the environment and build settings

print("\nloadFile:_________________________________________________________________________________");
loadFile(fileName="ModelicaStandardLibrary/mechanics/multibody/dampedPendulum/dampedPendulum.mo"); //loads model from a file

print("\ncd:_______________________________________________________________________________________");
cd("temp/");

print("\ncheckModel:_______________________________________________________________________________");
//checkModel(dampedPendulum);

print("\ncheckModel->getErrorString:");
getErrorString(); //returns the current error message

print("\nlist:_____________________________________________________________________________________");
//list(dampedPendulum);//lists the contents of the given class, or all loaded classes if empty

print("\nlistVariables:____________________________________________________________________________");
//listVariables();//lists all variables active in the scripting environment, that is those created in this file but not those found in the model

print("\ninstantiateModel:_________________________________________________________________________");
//instantiateModel(dampedPendulum); //instantiates the class and returns the flattened code

/*
print("\nbuildModel:_______________________________________________________________________________");
buildModel(dampedPendulum, startTime=0.0, stopTime=1.0, numberOfIntervals=100, tolerance=1e-3);
//buildModel(dampedPendulum, startTime=0.0, stopTime=1.0, numberOfIntervals=100, tolerance=1e-3, cflags="-d=failtrace,cgraphGraphVizFile"); //
//buildModel(dampedPendulum, startTime=0.0, stopTime=1.0, numberOfIntervals=100, tolerance=1e-3, options="-d=failtrace,cgraphGraphVizFile"); //

//print("\nbuildModel->countMessages:");
//countMessages(); //returns the number of (messages, warnings, errors)

print("\nbuildModel->getMessagesString:");
getMessagesString(); //returns the current error message

print("\nbuildModel->getErrorString:");
getErrorString(); //returns the current error message

//print("\nclearMessages:");
//clearMessages(); //clears the error buffer
*/

print("\nsimulate:_________________________________________________________________________________");
//simulate options:
//  see https://www.openmodelica.org/doc/OpenModelicaUsersGuide/latest/simulationflags.html
//  -abortSlowSimulation : stop simulation if it chatters
//  -alarm=nSeconds : stop simulation after n seconds. If the alarm stops the simulation results are still created but they are not through StopTime. StdOut log shows "Alarm clock"
//  -lv=LOG_SIMULATION,LOG_STATS : additional logs to turn on
//  -outputPath : location for output files
//  -r=resultFileName : default is ModelName_res.format
//  -steadyState : abort if simulation has reached steady state. See message "steady state reached at time = ___".
simulate(dampedPendulum, outputFormat="csv", cflags="-v --debug=failtrace,-cgraphGraphVizFile,countOperations", simflags="-abortSlowSimulation -alarm=5 -lv=LOG_SIMULATION,LOG_STATS -steadyState");
print("\nsimulate->getErrorString:");
getErrorString(); //returns the current error message

//plotAll();//eventually draws a qt window, too many vars to be useful..
